{"version":3,"sources":["helpers/addDataDescCol.js","helpers/fetchData.js","App.js","helpers/chart.js","index.js"],"names":["addQuarterStringsToArr","dataset","i","length","substring","push","useFetch","url","useState","data","setData","loading","setLoading","a","fetch","response","json","useEffect","fetchUrl","App","ref","useRef","width","height","svg","d3","current","xValue","d","yValue","margin","innerWidth","innerHeight","barWidth","titleXAxisPos","barchart","append","attr","text","xScale","domain","Date","range","yScale","xAxis","tickFormat","tickSizeOuter","yAxis","call","tooltip","style","selectAll","enter","on","transition","duration","html","textValue","pageX","pageY","render","className","viewBox","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.10056b65.chunk.js","sourcesContent":["// helper function to add corresponding text for the quarter and year as a string\r\nexport default function addQuarterStringsToArr(dataset) {\r\n  for (let i = 0; i < dataset.length; i++) {\r\n    switch (dataset[i][0].substring(5, 7)) {\r\n      case \"01\":\r\n      case \"02\":\r\n      case \"03\":\r\n        dataset[i].push(dataset[i][0].substring(0, 4) + \" Q1\");\r\n        break;\r\n      case \"04\":\r\n      case \"05\":\r\n      case \"06\":\r\n        dataset[i].push(dataset[i][0].substring(0, 4) + \" Q2\");\r\n        break;\r\n      case \"07\":\r\n      case \"08\":\r\n      case \"09\":\r\n        dataset[i].push(dataset[i][0].substring(0, 4) + \" Q3\");\r\n        break;\r\n      case \"10\":\r\n      case \"11\":\r\n      case \"12\":\r\n        dataset[i].push(dataset[i][0].substring(0, 4) + \" Q4\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  return dataset;\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport addQuarterStringsToArr from \"./addDataDescCol\";\r\n\r\nfunction useFetch(url) {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  async function fetchUrl() {\r\n    const response = await fetch(url);\r\n    const json = await response.json();\r\n    const dataset = await addQuarterStringsToArr(json.data);\r\n    setData(dataset);\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchUrl();\r\n  }, []);\r\n  return [data, loading];\r\n}\r\nexport { useFetch };\r\n","import React, { useEffect, useRef } from \"react\";\nimport \"./styles/main.scss\";\n\nimport { useFetch } from \"./helpers/fetchData\";\nimport { render } from \"./helpers/chart\";\n\nexport default function App() {\n  const WIDTH = 1260;\n  const HEIGHT = 600;\n  const DATA_LINK =\n    \"https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/GDP-data.json\";\n  const [data, loading] = useFetch(DATA_LINK);\n  const ref = useRef();\n\n  useEffect(() => {\n    if (data.length !== 0) {\n      render(data, ref, WIDTH, HEIGHT);\n    }\n  }, [loading]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"viz-container\">\n        <svg className=\"graph\" ref={ref} viewBox={`0 0 ${WIDTH} ${HEIGHT}`} />\n      </div>\n    </div>\n  );\n}\n","import * as d3 from \"d3\";\r\n\r\nconst render = (dataset, ref, width, height) => {\r\n  const svg = d3.select(ref.current);\r\n\r\n  const xValue = d => d[0];\r\n  const yValue = d => d[1];\r\n  const textValue = d => d[2];\r\n  const margin = { top: 40, right: 60, bottom: 40, left: 60 };\r\n  const innerWidth = width - margin.left - margin.right;\r\n  const innerHeight = height - margin.top - margin.bottom;\r\n  const barWidth = innerWidth / dataset.length;\r\n\r\n  const titleText = \"United States GDP\";\r\n  const titleXAxisPos = innerWidth / 2;\r\n  const titleYAxisPos = 10;\r\n\r\n  const yAxisLabelText = \"Gross Domestic Product\";\r\n  const yAxisLabelXPos = -100;\r\n  const yAxisLabelYPos = 30;\r\n\r\n  // Initiate a barchart\r\n  const barchart = svg\r\n    .append(\"g\")\r\n    .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\r\n\r\n  // Append a title\r\n  barchart\r\n    .append(\"text\")\r\n    .attr(\"id\", \"title\")\r\n    .attr(\"x\", titleXAxisPos)\r\n    .attr(\"y\", titleYAxisPos)\r\n    .text(titleText);\r\n\r\n  // Establish scale range\r\n  const xScale = d3\r\n    .scaleTime()\r\n    .domain([new Date(dataset[0][0]), new Date(dataset[dataset.length - 1][0])])\r\n    .range([0, innerWidth]);\r\n\r\n  const yScale = d3\r\n    .scaleLinear()\r\n    .domain([0, d3.max(dataset, yValue)])\r\n    .range([innerHeight, 0]);\r\n\r\n  const xAxis = d3\r\n    .axisBottom(xScale)\r\n    .tickFormat(d3.timeFormat(\"%Y\"))\r\n    .tickSizeOuter(0);\r\n  const yAxis = d3.axisLeft(yScale).tickSizeOuter(0);\r\n\r\n  barchart\r\n    .append(\"g\")\r\n    .attr(\"id\", \"x-axis\")\r\n    .attr(\"transform\", `translate(0, ${innerHeight})`)\r\n    .call(xAxis);\r\n\r\n  const yAxisG = barchart\r\n    .append(\"g\")\r\n    .attr(\"id\", \"y-axis\")\r\n    .call(yAxis);\r\n\r\n  yAxisG\r\n    .append(\"text\")\r\n    .attr(\"id\", \"yAxis-label\")\r\n    .attr(\"x\", yAxisLabelXPos)\r\n    .attr(\"y\", yAxisLabelYPos)\r\n    .attr(\"transform\", \"rotate(-90)\")\r\n    .text(yAxisLabelText);\r\n\r\n  let tooltip = d3\r\n    .select(\"body\")\r\n    .append(\"div\")\r\n    .attr(\"id\", \"tooltip\")\r\n    .style(\"opacity\", 0);\r\n\r\n  // Append bars to the barchart\r\n  barchart\r\n    .selectAll(\"rect\")\r\n    .data(dataset)\r\n    .enter()\r\n    .append(\"rect\")\r\n    .attr(\"x\", (d, i) => i * barWidth + 1.8)\r\n    .attr(\"y\", d => yScale(yValue(d)))\r\n    .attr(\"width\", barWidth)\r\n    .attr(\"height\", d => innerHeight - yScale(yValue(d)))\r\n    .attr(\"class\", \"bar\")\r\n    .attr(\"data-date\", d => xValue(d))\r\n    .attr(\"data-gdp\", d => yValue(d))\r\n    .on(\"mouseover\", (d, i) => {\r\n      tooltip\r\n        .transition()\r\n        .duration(200)\r\n        .style(\"opacity\", 0.9);\r\n      tooltip\r\n        .html(`${textValue(d)} </br>$${yValue(d)} Billion`)\r\n        .style(\"left\", d3.event.pageX - 50 + \"px\")\r\n        .style(\"top\", d3.event.pageY - 150 + \"px\")\r\n        .attr(\"data-date\", xValue(d));\r\n    })\r\n    .on(\"mouseout\", d => {\r\n      tooltip\r\n        .transition()\r\n        .duration(500)\r\n        .style(\"opacity\", 0);\r\n    });\r\n};\r\n\r\nexport { render };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}